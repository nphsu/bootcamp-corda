<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="bootcamp.FlowTests" tests="6" skipped="0" failures="1" errors="0" timestamp="2018-03-09T23:51:58" hostname="koikeshunpeinoMacBook-Pro.local" time="14.78">
  <properties/>
  <testcase name="transactionConstructedByFlowHasNoInputsAttachmentsOrTimewindows" classname="bootcamp.FlowTests" time="8.809">
    <failure message="java.lang.AssertionError: expected:&lt;0&gt; but was:&lt;1&gt;" type="java.lang.AssertionError">java.lang.AssertionError: expected:&lt;0&gt; but was:&lt;1&gt;
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:645)
	at org.junit.Assert.assertEquals(Assert.java:631)
	at bootcamp.FlowTests.transactionConstructedByFlowHasNoInputsAttachmentsOrTimewindows(FlowTests.java:110)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy1.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:146)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:128)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.lang.Thread.run(Thread.java:748)
</failure>
  </testcase>
  <testcase name="transactionConstructedByFlowUsesTheCorrectNotary" classname="bootcamp.FlowTests" time="1.543"/>
  <testcase name="transactionConstructedByFlowHasOneTokenStateOutputWithTheCorrectAmountAndRecipient" classname="bootcamp.FlowTests" time="1.23"/>
  <testcase name="transactionConstructedByFlowHasOneCommandWithTheIssueAsASigner" classname="bootcamp.FlowTests" time="1.206"/>
  <testcase name="transactionConstructedByFlowHasOneIssueCommand" classname="bootcamp.FlowTests" time="0.942"/>
  <testcase name="transactionConstructedByFlowHasOneOutputUsingTheCorrectContract" classname="bootcamp.FlowTests" time="1.048"/>
  <system-out><![CDATA[[INFO ] 08:51:59,057 [Test worker] (AbstractSecurityProviderRegistrar.java:113) eddsa.EdDSASecurityProviderRegistrar.getOrCreateProvider - getOrCreateProvider(EdDSA) created instance of net.i2p.crypto.eddsa.EdDSASecurityProvider {}
[INFO ] 08:51:59,754 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar, file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:51:59,770 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 08:51:59,770 [Test worker] (AbstractNode.kt:165) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 08:51:59,783 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar {}
[INFO ] 08:51:59,786 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:51:59,935 [Test worker] (NetworkParametersReader.kt:50) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2018-03-09T23:51:58.332Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 08:52:00,052 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-1 - Started. {}
[INFO ] 08:52:00,612 [Test worker] (AbstractNode.kt:826) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 08:52:00,687 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1)] {}
[INFO ] 08:52:00,688 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1)] {}
[INFO ] 08:52:01,090 [Test worker] (Version.java:45) hibernate.Version.logVersion - HHH000412: Hibernate Core {5.2.6.Final} {}
[INFO ] 08:52:01,093 [Test worker] (Environment.java:213) cfg.Environment.<clinit> - HHH000206: hibernate.properties not found {}
[INFO ] 08:52:01,220 [Test worker] (JavaReflectionManager.java:66) common.Version.<clinit> - HCANN000001: Hibernate Commons Annotations {5.0.1.Final} {}
[INFO ] 08:52:01,387 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 08:52:01,415 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 08:52:01,527 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@912ba1 {}
[INFO ] 08:52:03,053 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4bd9312c] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 08:52:03,229 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1)] {}
[INFO ] 08:52:03,570 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 08:52:04,347 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 75AFC653B0677CC5EC9596A4C5EA0C5572409A394EE2E65B34B61F64D3D09F36 {}
[WARN ] 08:52:04,348 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 08:52:04,489 [Test worker] (AbstractNode.kt:649) internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 08:52:04,830 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639524156) {}
[INFO ] 08:52:04,830 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[WARN ] 08:52:04,951 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key AAAF035F4CCFDD6995BFF97BD410D52539DABE7554CC96D5FBA66CA718C02812, not inserting the second time {}
[INFO ] 08:52:04,956 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639524156) {}
[INFO ] 08:52:05,075 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639524156) {}
[INFO ] 08:52:05,104 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:05,105 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639524156) {}
[INFO ] 08:52:05,105 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639524156) {}
[INFO ] 08:52:05,106 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:05,106 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639524156) {}
[INFO ] 08:52:05,110 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar, file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:52:05,111 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 08:52:05,111 [Test worker] (AbstractNode.kt:165) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 08:52:05,136 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar {}
[INFO ] 08:52:05,139 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:52:05,143 [Test worker] (AbstractNode.kt:731) internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 08:52:05,161 [Test worker] (NetworkParametersReader.kt:50) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2018-03-09T23:51:58.332Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 08:52:05,162 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-2 - Started. {}
[INFO ] 08:52:05,168 [Test worker] (AbstractNode.kt:826) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 08:52:05,169 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:05,169 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:05,174 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 08:52:05,175 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 08:52:05,181 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@912ba1 {}
[INFO ] 08:52:05,295 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@ea2f909] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 08:52:05,346 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:05,350 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 08:52:05,388 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 75AFC653B0677CC5EC9596A4C5EA0C5572409A394EE2E65B34B61F64D3D09F36 {}
[WARN ] 08:52:05,389 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 08:52:05,418 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639525362) {}
[INFO ] 08:52:05,419 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[WARN ] 08:52:05,433 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key DF62133F4D80BBC92CD7836644B852CB6DF6C4501E86015074F7E72A59C68CFB, not inserting the second time {}
[INFO ] 08:52:05,435 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639525362) {}
[INFO ] 08:52:05,439 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639524156) {}
[INFO ] 08:52:05,441 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:05,454 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639524156) {}
[INFO ] 08:52:05,455 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639525362) {}
[INFO ] 08:52:05,457 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:05,470 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639525362) {}
[INFO ] 08:52:05,470 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639525362) {}
[INFO ] 08:52:05,476 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:05,477 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639525362) {}
[INFO ] 08:52:05,477 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639525362) {}
[INFO ] 08:52:05,477 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:05,478 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639525362) {}
[INFO ] 08:52:05,480 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar, file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:52:05,480 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 08:52:05,481 [Test worker] (AbstractNode.kt:165) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 08:52:05,500 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar {}
[INFO ] 08:52:05,503 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:52:05,509 [Test worker] (AbstractNode.kt:731) internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 08:52:05,520 [Test worker] (NetworkParametersReader.kt:50) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2018-03-09T23:51:58.332Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 08:52:05,521 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-3 - Started. {}
[INFO ] 08:52:05,525 [Test worker] (AbstractNode.kt:826) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 08:52:05,526 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:05,527 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:05,531 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 08:52:05,532 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 08:52:05,536 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@912ba1 {}
[INFO ] 08:52:05,610 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@65b17236] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 08:52:05,645 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:05,646 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 08:52:05,689 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 75AFC653B0677CC5EC9596A4C5EA0C5572409A394EE2E65B34B61F64D3D09F36 {}
[WARN ] 08:52:05,689 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 08:52:05,715 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639525654) {}
[INFO ] 08:52:05,716 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[WARN ] 08:52:05,728 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key D9595674A22D35E16E0E7C974C1199D2E38834818DA99723AF06463A383E4CD8, not inserting the second time {}
[INFO ] 08:52:05,729 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639525654) {}
[INFO ] 08:52:05,733 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639524156) {}
[INFO ] 08:52:05,735 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:05,746 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639524156) {}
[INFO ] 08:52:05,746 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639525654) {}
[INFO ] 08:52:05,751 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:05,771 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639525654) {}
[INFO ] 08:52:05,772 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639525362) {}
[INFO ] 08:52:05,775 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:05,786 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639525362) {}
[INFO ] 08:52:05,787 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639525654) {}
[INFO ] 08:52:05,789 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:05,801 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639525654) {}
[INFO ] 08:52:05,802 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639525654) {}
[INFO ] 08:52:05,806 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:05,806 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639525654) {}
[INFO ] 08:52:05,806 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639525654) {}
[INFO ] 08:52:05,806 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:05,807 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639525654) {}
[WARN ] 08:52:06,588 [Mock network] (FlowLogic.kt:440) flow.[b2e035b6-bcee-4679-9cd8-525c64f401c5].maybeWireUpProgressTracking - ProgressTracker has not been started {}
[INFO ] 08:52:06,701 [Mock network] (FlowStateMachineImpl.kt:419) flow.[b2e035b6-bcee-4679-9cd8-525c64f401c5].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4178045681240065233). {}
[INFO ] 08:52:06,914 [Mock network] (StateMachineManagerImpl.kt:367) statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4178045681240065233). {invocation_id=0aa830a1-c5a7-4fac-9a3b-67d12a539fa2, invocation_timestamp=2018-03-09T23:52:06.903Z, session_id=0aa830a1-c5a7-4fac-9a3b-67d12a539fa2, session_timestamp=2018-03-09T23:52:06.903Z}
[WARN ] 08:52:07,061 [Mock network] (StateMachineManagerImpl.kt:79) flow.[b2e035b6-bcee-4679-9cd8-525c64f401c5].uncaughtException - Caught exception from flow {}
java.lang.IllegalStateException: Cannot rewind a progress tracker once it has ended
	at net.corda.core.utilities.ProgressTracker.setCurrentStep(ProgressTracker.kt:116) ~[corda-core-corda-3.0-RC01.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:120) ~[corda-node-corda-3.0-RC01.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) ~[corda-node-corda-3.0-RC01.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_162]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_162]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_162]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_162]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_162]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_162]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-corda-3.0-RC01.jar:?]
[INFO ] 08:52:07,101 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-1 - Close initiated... {}
[INFO ] 08:52:07,108 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-1 - Closed. {}
[INFO ] 08:52:07,116 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-2 - Close initiated... {}
[INFO ] 08:52:07,121 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-2 - Closed. {}
[INFO ] 08:52:07,123 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-3 - Close initiated... {}
[INFO ] 08:52:07,126 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-3 - Closed. {}
[INFO ] 08:52:07,209 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar, file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:52:07,210 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 08:52:07,211 [Test worker] (AbstractNode.kt:165) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 08:52:07,226 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar {}
[INFO ] 08:52:07,275 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:52:07,291 [Test worker] (NetworkParametersReader.kt:50) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2018-03-09T23:52:07.132Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 08:52:07,292 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-4 - Started. {}
[INFO ] 08:52:07,298 [Test worker] (AbstractNode.kt:826) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 08:52:07,300 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1)] {}
[INFO ] 08:52:07,301 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1)] {}
[INFO ] 08:52:07,316 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 08:52:07,318 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 08:52:07,325 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@912ba1 {}
[INFO ] 08:52:07,458 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@a7923af] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 08:52:07,508 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1)] {}
[INFO ] 08:52:07,511 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 08:52:07,561 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 75AFC653B0677CC5EC9596A4C5EA0C5572409A394EE2E65B34B61F64D3D09F36 {}
[WARN ] 08:52:07,562 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 08:52:07,571 [Test worker] (AbstractNode.kt:649) internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 08:52:07,589 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639527526) {}
[INFO ] 08:52:07,589 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[WARN ] 08:52:07,607 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key E1A5779622FD68E1E7188D6AFD27724E119C31F1DAC8EA4B66D21B887221F297, not inserting the second time {}
[INFO ] 08:52:07,609 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639527526) {}
[INFO ] 08:52:07,621 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639527526) {}
[INFO ] 08:52:07,629 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:07,630 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639527526) {}
[INFO ] 08:52:07,631 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639527526) {}
[INFO ] 08:52:07,632 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:07,633 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639527526) {}
[INFO ] 08:52:07,636 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar, file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:52:07,637 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 08:52:07,637 [Test worker] (AbstractNode.kt:165) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 08:52:07,658 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar {}
[INFO ] 08:52:07,661 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:52:07,667 [Test worker] (AbstractNode.kt:731) internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 08:52:07,679 [Test worker] (NetworkParametersReader.kt:50) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2018-03-09T23:52:07.132Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 08:52:07,679 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-5 - Started. {}
[INFO ] 08:52:07,683 [Test worker] (AbstractNode.kt:826) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 08:52:07,684 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:07,684 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:07,690 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 08:52:07,691 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 08:52:07,699 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@912ba1 {}
[INFO ] 08:52:07,801 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@60f4f7db] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 08:52:07,840 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:07,842 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 08:52:07,897 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 75AFC653B0677CC5EC9596A4C5EA0C5572409A394EE2E65B34B61F64D3D09F36 {}
[WARN ] 08:52:07,899 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 08:52:07,926 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639527855) {}
[INFO ] 08:52:07,926 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[WARN ] 08:52:07,941 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 14ED76E0D296C7286ECF118D19DF1192AA59D01316B7A16AA94056FE200B989C, not inserting the second time {}
[INFO ] 08:52:07,942 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639527855) {}
[INFO ] 08:52:07,949 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639527526) {}
[INFO ] 08:52:07,952 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:07,964 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639527526) {}
[INFO ] 08:52:07,964 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639527855) {}
[INFO ] 08:52:07,968 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:07,987 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639527855) {}
[INFO ] 08:52:07,988 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639527855) {}
[INFO ] 08:52:07,994 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:07,995 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639527855) {}
[INFO ] 08:52:07,996 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639527855) {}
[INFO ] 08:52:07,997 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:07,999 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639527855) {}
[INFO ] 08:52:08,003 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar, file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:52:08,004 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 08:52:08,005 [Test worker] (AbstractNode.kt:165) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 08:52:08,026 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar {}
[INFO ] 08:52:08,029 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:52:08,033 [Test worker] (AbstractNode.kt:731) internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 08:52:08,047 [Test worker] (NetworkParametersReader.kt:50) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2018-03-09T23:52:07.132Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 08:52:08,049 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-6 - Started. {}
[INFO ] 08:52:08,056 [Test worker] (AbstractNode.kt:826) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 08:52:08,057 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:08,058 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:08,072 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 08:52:08,074 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 08:52:08,078 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@912ba1 {}
[INFO ] 08:52:08,160 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@78142453] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 08:52:08,190 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:08,192 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 08:52:08,238 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 75AFC653B0677CC5EC9596A4C5EA0C5572409A394EE2E65B34B61F64D3D09F36 {}
[WARN ] 08:52:08,239 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 08:52:08,260 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639528204) {}
[INFO ] 08:52:08,260 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[WARN ] 08:52:08,280 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key D3CCE5A8F38DA5D8F7DB3E38A4A6F36C6996C438755FEAF9CD67B95B58E7FD45, not inserting the second time {}
[INFO ] 08:52:08,282 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639528204) {}
[INFO ] 08:52:08,286 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639527526) {}
[INFO ] 08:52:08,289 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:08,310 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639527526) {}
[INFO ] 08:52:08,311 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639528204) {}
[INFO ] 08:52:08,313 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:08,324 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639528204) {}
[INFO ] 08:52:08,324 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639527855) {}
[INFO ] 08:52:08,326 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:08,341 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639527855) {}
[INFO ] 08:52:08,341 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639528204) {}
[INFO ] 08:52:08,343 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:08,360 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639528204) {}
[INFO ] 08:52:08,360 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639528204) {}
[INFO ] 08:52:08,367 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:08,368 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639528204) {}
[INFO ] 08:52:08,369 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639528204) {}
[INFO ] 08:52:08,369 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:08,370 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639528204) {}
[WARN ] 08:52:08,430 [Mock network] (FlowLogic.kt:440) flow.[72cd0df0-585e-42ee-ae5b-ba9d72db084c].maybeWireUpProgressTracking - ProgressTracker has not been started {}
[INFO ] 08:52:08,467 [Mock network] (FlowStateMachineImpl.kt:419) flow.[72cd0df0-585e-42ee-ae5b-ba9d72db084c].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-3606337388173991241). {}
[INFO ] 08:52:08,523 [Mock network] (StateMachineManagerImpl.kt:367) statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-3606337388173991241). {invocation_id=53d2086c-4673-4423-aee8-b087707a28c1, invocation_timestamp=2018-03-09T23:52:08.521Z, session_id=53d2086c-4673-4423-aee8-b087707a28c1, session_timestamp=2018-03-09T23:52:08.521Z}
[WARN ] 08:52:08,639 [Mock network] (StateMachineManagerImpl.kt:79) flow.[72cd0df0-585e-42ee-ae5b-ba9d72db084c].uncaughtException - Caught exception from flow {}
java.lang.IllegalStateException: Cannot rewind a progress tracker once it has ended
	at net.corda.core.utilities.ProgressTracker.setCurrentStep(ProgressTracker.kt:116) ~[corda-core-corda-3.0-RC01.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:120) ~[corda-node-corda-3.0-RC01.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) ~[corda-node-corda-3.0-RC01.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_162]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_162]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_162]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_162]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_162]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_162]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-corda-3.0-RC01.jar:?]
[INFO ] 08:52:08,645 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-4 - Close initiated... {}
[INFO ] 08:52:08,654 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-4 - Closed. {}
[INFO ] 08:52:08,661 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-5 - Close initiated... {}
[INFO ] 08:52:08,669 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-5 - Closed. {}
[INFO ] 08:52:08,671 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-6 - Close initiated... {}
[INFO ] 08:52:08,675 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-6 - Closed. {}
[INFO ] 08:52:08,725 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar, file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:52:08,726 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 08:52:08,727 [Test worker] (AbstractNode.kt:165) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 08:52:08,733 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar {}
[INFO ] 08:52:08,738 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:52:08,752 [Test worker] (NetworkParametersReader.kt:50) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2018-03-09T23:52:08.676Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 08:52:08,753 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-7 - Started. {}
[INFO ] 08:52:08,757 [Test worker] (AbstractNode.kt:826) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 08:52:08,758 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1)] {}
[INFO ] 08:52:08,758 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1)] {}
[INFO ] 08:52:08,770 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 08:52:08,771 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 08:52:08,776 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@912ba1 {}
[INFO ] 08:52:08,878 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2dff139b] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 08:52:08,919 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1)] {}
[INFO ] 08:52:08,921 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 08:52:08,958 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 75AFC653B0677CC5EC9596A4C5EA0C5572409A394EE2E65B34B61F64D3D09F36 {}
[WARN ] 08:52:08,959 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 08:52:08,967 [Test worker] (AbstractNode.kt:649) internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 08:52:08,983 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639528929) {}
[INFO ] 08:52:08,983 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[WARN ] 08:52:08,996 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key A1CBECCB411B8C88806BDE037BCB0B1DC051D3D629DF13B39C3DF5C336E12036, not inserting the second time {}
[INFO ] 08:52:09,001 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639528929) {}
[INFO ] 08:52:09,009 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639528929) {}
[INFO ] 08:52:09,018 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:09,019 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639528929) {}
[INFO ] 08:52:09,019 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639528929) {}
[INFO ] 08:52:09,020 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:09,020 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639528929) {}
[INFO ] 08:52:09,022 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar, file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:52:09,024 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 08:52:09,024 [Test worker] (AbstractNode.kt:165) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 08:52:09,051 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar {}
[INFO ] 08:52:09,054 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:52:09,058 [Test worker] (AbstractNode.kt:731) internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 08:52:09,072 [Test worker] (NetworkParametersReader.kt:50) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2018-03-09T23:52:08.676Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 08:52:09,073 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-8 - Started. {}
[INFO ] 08:52:09,078 [Test worker] (AbstractNode.kt:826) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 08:52:09,078 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:09,079 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:09,085 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 08:52:09,085 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 08:52:09,090 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@912ba1 {}
[INFO ] 08:52:09,183 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1c1a04fa] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 08:52:09,212 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:09,213 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 08:52:09,254 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 75AFC653B0677CC5EC9596A4C5EA0C5572409A394EE2E65B34B61F64D3D09F36 {}
[WARN ] 08:52:09,255 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 08:52:09,277 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639529224) {}
[INFO ] 08:52:09,277 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[WARN ] 08:52:09,288 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 0E6B8E4C48D8D7B55F745AB0703FD088D71F6DB983123413307B839EEE2EAEC9, not inserting the second time {}
[INFO ] 08:52:09,290 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639529224) {}
[INFO ] 08:52:09,298 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639528929) {}
[INFO ] 08:52:09,302 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:09,320 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639528929) {}
[INFO ] 08:52:09,321 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639529224) {}
[INFO ] 08:52:09,324 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:09,335 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639529224) {}
[INFO ] 08:52:09,335 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639529224) {}
[INFO ] 08:52:09,340 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:09,341 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639529224) {}
[INFO ] 08:52:09,341 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639529224) {}
[INFO ] 08:52:09,342 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:09,342 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639529224) {}
[INFO ] 08:52:09,344 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar, file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:52:09,344 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 08:52:09,345 [Test worker] (AbstractNode.kt:165) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 08:52:09,372 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar {}
[INFO ] 08:52:09,376 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:52:09,380 [Test worker] (AbstractNode.kt:731) internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 08:52:09,390 [Test worker] (NetworkParametersReader.kt:50) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2018-03-09T23:52:08.676Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 08:52:09,390 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-9 - Started. {}
[INFO ] 08:52:09,394 [Test worker] (AbstractNode.kt:826) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 08:52:09,395 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:09,395 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:09,402 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 08:52:09,402 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 08:52:09,405 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@912ba1 {}
[INFO ] 08:52:09,484 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4ca2c02b] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 08:52:09,526 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:09,527 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 08:52:09,559 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 75AFC653B0677CC5EC9596A4C5EA0C5572409A394EE2E65B34B61F64D3D09F36 {}
[WARN ] 08:52:09,560 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 08:52:09,586 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639529533) {}
[INFO ] 08:52:09,586 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[WARN ] 08:52:09,600 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 4835808C904680A7BE593EE7B98E5C200372B0EFBDC4DEC4C341EFEBC1391C59, not inserting the second time {}
[INFO ] 08:52:09,603 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639529533) {}
[INFO ] 08:52:09,608 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639528929) {}
[INFO ] 08:52:09,611 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:09,621 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639528929) {}
[INFO ] 08:52:09,621 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639529533) {}
[INFO ] 08:52:09,623 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:09,630 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639529533) {}
[INFO ] 08:52:09,631 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639529224) {}
[INFO ] 08:52:09,632 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:09,640 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639529224) {}
[INFO ] 08:52:09,640 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639529533) {}
[INFO ] 08:52:09,642 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:09,659 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639529533) {}
[INFO ] 08:52:09,659 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639529533) {}
[INFO ] 08:52:09,664 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:09,665 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639529533) {}
[INFO ] 08:52:09,666 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639529533) {}
[INFO ] 08:52:09,667 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:09,667 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639529533) {}
[WARN ] 08:52:09,707 [Mock network] (FlowLogic.kt:440) flow.[ba46c144-979c-4372-bf5b-e4e1c5aebba1].maybeWireUpProgressTracking - ProgressTracker has not been started {}
[INFO ] 08:52:09,755 [Mock network] (FlowStateMachineImpl.kt:419) flow.[ba46c144-979c-4372-bf5b-e4e1c5aebba1].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2199743199838057192). {}
[INFO ] 08:52:09,814 [Mock network] (StateMachineManagerImpl.kt:367) statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2199743199838057192). {invocation_id=3972cb27-0099-45aa-92cf-65ebcd76d2c2, invocation_timestamp=2018-03-09T23:52:09.813Z, session_id=3972cb27-0099-45aa-92cf-65ebcd76d2c2, session_timestamp=2018-03-09T23:52:09.813Z}
[WARN ] 08:52:09,887 [Mock network] (StateMachineManagerImpl.kt:79) flow.[ba46c144-979c-4372-bf5b-e4e1c5aebba1].uncaughtException - Caught exception from flow {}
java.lang.IllegalStateException: Cannot rewind a progress tracker once it has ended
	at net.corda.core.utilities.ProgressTracker.setCurrentStep(ProgressTracker.kt:116) ~[corda-core-corda-3.0-RC01.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:120) ~[corda-node-corda-3.0-RC01.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) ~[corda-node-corda-3.0-RC01.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_162]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_162]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_162]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_162]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_162]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_162]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-corda-3.0-RC01.jar:?]
[INFO ] 08:52:09,890 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-7 - Close initiated... {}
[INFO ] 08:52:09,892 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-7 - Closed. {}
[INFO ] 08:52:09,893 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-8 - Close initiated... {}
[INFO ] 08:52:09,899 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-8 - Closed. {}
[INFO ] 08:52:09,902 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-9 - Close initiated... {}
[INFO ] 08:52:09,905 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-9 - Closed. {}
[INFO ] 08:52:09,961 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar, file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:52:09,961 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 08:52:09,962 [Test worker] (AbstractNode.kt:165) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 08:52:09,966 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar {}
[INFO ] 08:52:09,970 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:52:09,980 [Test worker] (NetworkParametersReader.kt:50) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2018-03-09T23:52:09.906Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 08:52:09,981 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-10 - Started. {}
[INFO ] 08:52:09,987 [Test worker] (AbstractNode.kt:826) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 08:52:09,988 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1)] {}
[INFO ] 08:52:09,988 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1)] {}
[INFO ] 08:52:10,001 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 08:52:10,003 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 08:52:10,009 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@912ba1 {}
[INFO ] 08:52:10,109 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@444ccfca] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 08:52:10,159 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1)] {}
[INFO ] 08:52:10,161 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 08:52:10,213 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 75AFC653B0677CC5EC9596A4C5EA0C5572409A394EE2E65B34B61F64D3D09F36 {}
[WARN ] 08:52:10,213 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 08:52:10,223 [Test worker] (AbstractNode.kt:649) internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 08:52:10,292 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639530170) {}
[INFO ] 08:52:10,293 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[WARN ] 08:52:10,309 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key D0C7EBC3CE146579E0780C2C748E033D5B0356BE8D17C38597C16DD30A34A81E, not inserting the second time {}
[INFO ] 08:52:10,311 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639530170) {}
[INFO ] 08:52:10,324 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639530170) {}
[INFO ] 08:52:10,328 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:10,329 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639530170) {}
[INFO ] 08:52:10,329 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639530170) {}
[INFO ] 08:52:10,330 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:10,330 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639530170) {}
[INFO ] 08:52:10,332 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar, file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:52:10,333 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 08:52:10,333 [Test worker] (AbstractNode.kt:165) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 08:52:10,354 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar {}
[INFO ] 08:52:10,359 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:52:10,364 [Test worker] (AbstractNode.kt:731) internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 08:52:10,376 [Test worker] (NetworkParametersReader.kt:50) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2018-03-09T23:52:09.906Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 08:52:10,377 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-11 - Started. {}
[INFO ] 08:52:10,381 [Test worker] (AbstractNode.kt:826) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 08:52:10,381 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:10,382 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:10,387 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 08:52:10,388 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 08:52:10,391 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@912ba1 {}
[INFO ] 08:52:10,457 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6ef84768] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 08:52:10,485 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:10,486 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 08:52:10,519 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 75AFC653B0677CC5EC9596A4C5EA0C5572409A394EE2E65B34B61F64D3D09F36 {}
[WARN ] 08:52:10,519 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 08:52:10,533 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639530492) {}
[INFO ] 08:52:10,534 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[WARN ] 08:52:10,543 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key FB64184E3D009330443E0009FE6A14C1E8A1F74F58479CB032AC1CF607E104B9, not inserting the second time {}
[INFO ] 08:52:10,545 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639530492) {}
[INFO ] 08:52:10,552 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639530170) {}
[INFO ] 08:52:10,556 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:10,568 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639530170) {}
[INFO ] 08:52:10,568 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639530492) {}
[INFO ] 08:52:10,571 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:10,580 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639530492) {}
[INFO ] 08:52:10,580 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639530492) {}
[INFO ] 08:52:10,584 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:10,584 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639530492) {}
[INFO ] 08:52:10,585 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639530492) {}
[INFO ] 08:52:10,585 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:10,586 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639530492) {}
[INFO ] 08:52:10,588 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar, file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:52:10,588 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 08:52:10,589 [Test worker] (AbstractNode.kt:165) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 08:52:10,606 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar {}
[INFO ] 08:52:10,609 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:52:10,613 [Test worker] (AbstractNode.kt:731) internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 08:52:10,629 [Test worker] (NetworkParametersReader.kt:50) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2018-03-09T23:52:09.906Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 08:52:10,630 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-12 - Started. {}
[INFO ] 08:52:10,634 [Test worker] (AbstractNode.kt:826) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 08:52:10,635 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:10,635 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:10,646 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 08:52:10,646 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 08:52:10,650 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@912ba1 {}
[INFO ] 08:52:10,717 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@427b4e7f] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 08:52:10,739 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:10,740 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 08:52:10,776 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 75AFC653B0677CC5EC9596A4C5EA0C5572409A394EE2E65B34B61F64D3D09F36 {}
[WARN ] 08:52:10,777 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 08:52:10,793 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639530745) {}
[INFO ] 08:52:10,793 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[WARN ] 08:52:10,807 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 521199BDD9D2A9D6392FE447110DC6EFD13A06A4C36F50E1CF67AC48CA6D13C2, not inserting the second time {}
[INFO ] 08:52:10,808 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639530745) {}
[INFO ] 08:52:10,811 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639530170) {}
[INFO ] 08:52:10,813 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:10,824 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639530170) {}
[INFO ] 08:52:10,825 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639530745) {}
[INFO ] 08:52:10,827 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:10,839 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639530745) {}
[INFO ] 08:52:10,840 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639530492) {}
[INFO ] 08:52:10,842 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:10,855 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639530492) {}
[INFO ] 08:52:10,856 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639530745) {}
[INFO ] 08:52:10,859 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:10,871 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639530745) {}
[INFO ] 08:52:10,872 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639530745) {}
[INFO ] 08:52:10,877 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:10,877 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639530745) {}
[INFO ] 08:52:10,878 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639530745) {}
[INFO ] 08:52:10,878 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:10,879 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639530745) {}
[WARN ] 08:52:10,928 [Mock network] (FlowLogic.kt:440) flow.[038f8e0a-d549-4d83-b276-175880a31e92].maybeWireUpProgressTracking - ProgressTracker has not been started {}
[INFO ] 08:52:10,955 [Mock network] (FlowStateMachineImpl.kt:419) flow.[038f8e0a-d549-4d83-b276-175880a31e92].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2674078582488619681). {}
[INFO ] 08:52:11,014 [Mock network] (StateMachineManagerImpl.kt:367) statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2674078582488619681). {invocation_id=cc4cf2af-fbd4-4e5d-ada8-12cfc388facd, invocation_timestamp=2018-03-09T23:52:11.012Z, session_id=cc4cf2af-fbd4-4e5d-ada8-12cfc388facd, session_timestamp=2018-03-09T23:52:11.012Z}
[WARN ] 08:52:11,092 [Mock network] (StateMachineManagerImpl.kt:79) flow.[038f8e0a-d549-4d83-b276-175880a31e92].uncaughtException - Caught exception from flow {}
java.lang.IllegalStateException: Cannot rewind a progress tracker once it has ended
	at net.corda.core.utilities.ProgressTracker.setCurrentStep(ProgressTracker.kt:116) ~[corda-core-corda-3.0-RC01.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:120) ~[corda-node-corda-3.0-RC01.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) ~[corda-node-corda-3.0-RC01.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_162]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_162]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_162]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_162]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_162]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_162]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-corda-3.0-RC01.jar:?]
[INFO ] 08:52:11,095 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-10 - Close initiated... {}
[INFO ] 08:52:11,102 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-10 - Closed. {}
[INFO ] 08:52:11,105 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-11 - Close initiated... {}
[INFO ] 08:52:11,108 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-11 - Closed. {}
[INFO ] 08:52:11,110 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-12 - Close initiated... {}
[INFO ] 08:52:11,112 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-12 - Closed. {}
[INFO ] 08:52:11,146 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar, file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:52:11,147 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 08:52:11,148 [Test worker] (AbstractNode.kt:165) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 08:52:11,153 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar {}
[INFO ] 08:52:11,155 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:52:11,165 [Test worker] (NetworkParametersReader.kt:50) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2018-03-09T23:52:11.113Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 08:52:11,166 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-13 - Started. {}
[INFO ] 08:52:11,172 [Test worker] (AbstractNode.kt:826) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 08:52:11,172 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1)] {}
[INFO ] 08:52:11,173 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1)] {}
[INFO ] 08:52:11,182 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 08:52:11,184 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 08:52:11,189 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@912ba1 {}
[INFO ] 08:52:11,253 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@78c10b01] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 08:52:11,280 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1)] {}
[INFO ] 08:52:11,281 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 08:52:11,313 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 75AFC653B0677CC5EC9596A4C5EA0C5572409A394EE2E65B34B61F64D3D09F36 {}
[WARN ] 08:52:11,314 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 08:52:11,321 [Test worker] (AbstractNode.kt:649) internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 08:52:11,332 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639531285) {}
[INFO ] 08:52:11,333 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[WARN ] 08:52:11,343 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 9C5C16A3C92409DEC35B9C53AE7A0B2B56BC26C910CA40F59EA26F1FA1067C93, not inserting the second time {}
[INFO ] 08:52:11,344 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639531285) {}
[INFO ] 08:52:11,354 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639531285) {}
[INFO ] 08:52:11,358 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:11,358 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639531285) {}
[INFO ] 08:52:11,359 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639531285) {}
[INFO ] 08:52:11,359 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:11,359 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639531285) {}
[INFO ] 08:52:11,361 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar, file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:52:11,361 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 08:52:11,362 [Test worker] (AbstractNode.kt:165) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 08:52:11,376 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar {}
[INFO ] 08:52:11,380 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:52:11,385 [Test worker] (AbstractNode.kt:731) internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 08:52:11,392 [Test worker] (NetworkParametersReader.kt:50) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2018-03-09T23:52:11.113Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 08:52:11,393 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-14 - Started. {}
[INFO ] 08:52:11,397 [Test worker] (AbstractNode.kt:826) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 08:52:11,398 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:11,399 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:11,406 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 08:52:11,407 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 08:52:11,414 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@912ba1 {}
[INFO ] 08:52:11,460 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@872bfa4] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 08:52:11,480 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:11,481 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 08:52:11,510 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 75AFC653B0677CC5EC9596A4C5EA0C5572409A394EE2E65B34B61F64D3D09F36 {}
[WARN ] 08:52:11,511 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 08:52:11,533 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639531486) {}
[INFO ] 08:52:11,534 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[WARN ] 08:52:11,547 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key E9B16E584DB9C34EDAE8B9DB22FBEFC51A470466BFB2B611107C1C72C1D65541, not inserting the second time {}
[INFO ] 08:52:11,551 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639531486) {}
[INFO ] 08:52:11,555 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639531285) {}
[INFO ] 08:52:11,556 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:11,562 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639531285) {}
[INFO ] 08:52:11,562 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639531486) {}
[INFO ] 08:52:11,565 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:11,574 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639531486) {}
[INFO ] 08:52:11,574 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639531486) {}
[INFO ] 08:52:11,577 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:11,578 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639531486) {}
[INFO ] 08:52:11,578 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639531486) {}
[INFO ] 08:52:11,578 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:11,579 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639531486) {}
[INFO ] 08:52:11,581 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar, file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:52:11,581 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 08:52:11,582 [Test worker] (AbstractNode.kt:165) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 08:52:11,601 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar {}
[INFO ] 08:52:11,605 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:52:11,609 [Test worker] (AbstractNode.kt:731) internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 08:52:11,622 [Test worker] (NetworkParametersReader.kt:50) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2018-03-09T23:52:11.113Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 08:52:11,623 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-15 - Started. {}
[INFO ] 08:52:11,626 [Test worker] (AbstractNode.kt:826) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 08:52:11,627 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:11,627 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:11,632 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 08:52:11,632 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 08:52:11,635 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@912ba1 {}
[INFO ] 08:52:11,691 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1c2c59ec] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 08:52:11,711 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:11,712 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 08:52:11,752 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 75AFC653B0677CC5EC9596A4C5EA0C5572409A394EE2E65B34B61F64D3D09F36 {}
[WARN ] 08:52:11,753 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 08:52:11,767 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639531721) {}
[INFO ] 08:52:11,768 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[WARN ] 08:52:11,779 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 5A424E1A1389E84166B67C6DF1A2A361D1CA09D7CD017262E2E9F10531F687CC, not inserting the second time {}
[INFO ] 08:52:11,780 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639531721) {}
[INFO ] 08:52:11,783 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639531285) {}
[INFO ] 08:52:11,784 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:11,790 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639531285) {}
[INFO ] 08:52:11,791 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639531721) {}
[INFO ] 08:52:11,792 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:11,806 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639531721) {}
[INFO ] 08:52:11,806 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639531486) {}
[INFO ] 08:52:11,808 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:11,822 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639531486) {}
[INFO ] 08:52:11,823 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639531721) {}
[INFO ] 08:52:11,825 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:11,834 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639531721) {}
[INFO ] 08:52:11,834 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639531721) {}
[INFO ] 08:52:11,837 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:11,838 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639531721) {}
[INFO ] 08:52:11,838 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639531721) {}
[INFO ] 08:52:11,838 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:11,839 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639531721) {}
[WARN ] 08:52:11,887 [Mock network] (FlowLogic.kt:440) flow.[821e8bf5-ca47-4a88-b10a-4224332ccd30].maybeWireUpProgressTracking - ProgressTracker has not been started {}
[INFO ] 08:52:11,913 [Mock network] (FlowStateMachineImpl.kt:419) flow.[821e8bf5-ca47-4a88-b10a-4224332ccd30].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1410776057092219803). {}
[INFO ] 08:52:11,960 [Mock network] (StateMachineManagerImpl.kt:367) statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1410776057092219803). {invocation_id=141983e4-270f-4f03-a06a-4da8768f9272, invocation_timestamp=2018-03-09T23:52:11.959Z, session_id=141983e4-270f-4f03-a06a-4da8768f9272, session_timestamp=2018-03-09T23:52:11.959Z}
[WARN ] 08:52:12,036 [Mock network] (StateMachineManagerImpl.kt:79) flow.[821e8bf5-ca47-4a88-b10a-4224332ccd30].uncaughtException - Caught exception from flow {}
java.lang.IllegalStateException: Cannot rewind a progress tracker once it has ended
	at net.corda.core.utilities.ProgressTracker.setCurrentStep(ProgressTracker.kt:116) ~[corda-core-corda-3.0-RC01.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:120) ~[corda-node-corda-3.0-RC01.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) ~[corda-node-corda-3.0-RC01.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_162]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_162]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_162]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_162]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_162]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_162]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-corda-3.0-RC01.jar:?]
[INFO ] 08:52:12,039 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-13 - Close initiated... {}
[INFO ] 08:52:12,041 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-13 - Closed. {}
[INFO ] 08:52:12,050 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-14 - Close initiated... {}
[INFO ] 08:52:12,052 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-14 - Closed. {}
[INFO ] 08:52:12,053 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-15 - Close initiated... {}
[INFO ] 08:52:12,055 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-15 - Closed. {}
[INFO ] 08:52:12,096 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar, file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:52:12,098 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 08:52:12,099 [Test worker] (AbstractNode.kt:165) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 08:52:12,103 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar {}
[INFO ] 08:52:12,106 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:52:12,118 [Test worker] (NetworkParametersReader.kt:50) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2018-03-09T23:52:12.056Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 08:52:12,119 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-16 - Started. {}
[INFO ] 08:52:12,124 [Test worker] (AbstractNode.kt:826) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 08:52:12,125 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1)] {}
[INFO ] 08:52:12,125 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1)] {}
[INFO ] 08:52:12,130 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 08:52:12,132 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 08:52:12,135 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@912ba1 {}
[INFO ] 08:52:12,205 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@637c1b35] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 08:52:12,233 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1)] {}
[INFO ] 08:52:12,234 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 08:52:12,267 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 75AFC653B0677CC5EC9596A4C5EA0C5572409A394EE2E65B34B61F64D3D09F36 {}
[WARN ] 08:52:12,268 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 08:52:12,273 [Test worker] (AbstractNode.kt:649) internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 08:52:12,288 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639532238) {}
[INFO ] 08:52:12,289 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[WARN ] 08:52:12,302 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 63F1C24ABF93DFFCBA3D540319B68604ECC33BF8AA2F903D9A43773C0C18AB31, not inserting the second time {}
[INFO ] 08:52:12,304 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639532238) {}
[INFO ] 08:52:12,317 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639532238) {}
[INFO ] 08:52:12,322 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:12,322 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639532238) {}
[INFO ] 08:52:12,323 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639532238) {}
[INFO ] 08:52:12,323 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:12,324 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639532238) {}
[INFO ] 08:52:12,326 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar, file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:52:12,327 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 08:52:12,327 [Test worker] (AbstractNode.kt:165) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 08:52:12,338 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar {}
[INFO ] 08:52:12,341 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:52:12,344 [Test worker] (AbstractNode.kt:731) internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 08:52:12,359 [Test worker] (NetworkParametersReader.kt:50) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2018-03-09T23:52:12.056Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 08:52:12,359 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-17 - Started. {}
[INFO ] 08:52:12,362 [Test worker] (AbstractNode.kt:826) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 08:52:12,363 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:12,364 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:12,371 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 08:52:12,371 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 08:52:12,375 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@912ba1 {}
[INFO ] 08:52:12,411 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5056a86a] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 08:52:12,443 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:12,444 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 08:52:12,483 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 75AFC653B0677CC5EC9596A4C5EA0C5572409A394EE2E65B34B61F64D3D09F36 {}
[WARN ] 08:52:12,483 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 08:52:12,499 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639532452) {}
[INFO ] 08:52:12,500 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[WARN ] 08:52:12,515 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key C626D42B00A6393AD587284F8A9213DA59365B1721C89277DF26E26C06661028, not inserting the second time {}
[INFO ] 08:52:12,517 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639532452) {}
[INFO ] 08:52:12,521 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639532238) {}
[INFO ] 08:52:12,523 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:12,531 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639532238) {}
[INFO ] 08:52:12,532 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639532452) {}
[INFO ] 08:52:12,533 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:12,541 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639532452) {}
[INFO ] 08:52:12,542 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639532452) {}
[INFO ] 08:52:12,548 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:12,548 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639532452) {}
[INFO ] 08:52:12,548 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639532452) {}
[INFO ] 08:52:12,549 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:12,549 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639532452) {}
[INFO ] 08:52:12,550 [Test worker] (CordappLoader.kt:53) cordapp.CordappLoader.<init> - Loading CorDapps from file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar, file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:52:12,551 [Test worker] (AbstractNode.kt:194) internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 08:52:12,551 [Test worker] (AbstractNode.kt:165) internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 08:52:12,564 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-2658a12b-8948-4af5-b2d6-eccb5b1bb8e0.jar {}
[INFO ] 08:52:12,566 [Test worker] (CordappLoader.kt:270) cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/Users/koikeshunpei/Desktop/cordapps/bootcamp-cordapp/java/build/tmp/generated-test-cordapps/bootcamp-70cd80d0-31e0-4457-8568-73f56648296f.jar {}
[INFO ] 08:52:12,569 [Test worker] (AbstractNode.kt:731) internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 08:52:12,583 [Test worker] (NetworkParametersReader.kt:50) internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: NetworkParameters(minimumPlatformVersion=1, notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)], maxMessageSize=10485760, maxTransactionSize=10485760, modifiedTime=2018-03-09T23:52:12.056Z, epoch=1, whitelistedContractImplementations={}) {}
[INFO ] 08:52:12,585 [Test worker] (HikariDataSource.java:70) hikari.HikariDataSource.<init> - HikariPool-18 - Started. {}
[INFO ] 08:52:12,590 [Test worker] (AbstractNode.kt:826) internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 08:52:12,590 [Test worker] (HibernateConfiguration.kt:39) persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:12,591 [Test worker] (HibernateConfiguration.kt:47) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:12,603 [Test worker] (ConnectionProviderInitiator.java:122) internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider {}
[INFO ] 08:52:12,603 [Test worker] (Dialect.java:157) dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect {}
[INFO ] 08:52:12,607 [Test worker] (BasicTypeRegistry.java:148) type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@912ba1 {}
[INFO ] 08:52:12,685 [Test worker] (DdlTransactionIsolatorNonJtaImpl.java:47) connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6e2fa6be] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. {}
[INFO ] 08:52:12,716 [Test worker] (HibernateConfiguration.kt:64) persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 08:52:12,718 [Test worker] (QueryTranslatorFactoryInitiator.java:47) internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory {}
[INFO ] 08:52:12,752 [Test worker] (NodeAttachmentService.kt:297) persistence.NodeAttachmentService.invoke - Stored new attachment 75AFC653B0677CC5EC9596A4C5EA0C5572409A394EE2E65B34B61F64D3D09F36 {}
[WARN ] 08:52:12,752 [Test worker] (CordappProviderImpl.kt:40) cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 08:52:12,766 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639532725) {}
[INFO ] 08:52:12,766 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[WARN ] 08:52:12,779 [Test worker] (AppendOnlyPersistentMap.kt:79) utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 1F4BB71EBEFC83A9660617A7AAF09A63A6F9221E1914CA80AF3D3A4870A7B1D5, not inserting the second time {}
[INFO ] 08:52:12,784 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639532725) {}
[INFO ] 08:52:12,790 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639532238) {}
[INFO ] 08:52:12,792 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:12,803 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1520639532238) {}
[INFO ] 08:52:12,804 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639532725) {}
[INFO ] 08:52:12,806 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:12,813 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639532725) {}
[INFO ] 08:52:12,814 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639532452) {}
[INFO ] 08:52:12,816 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:12,826 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1520639532452) {}
[INFO ] 08:52:12,826 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639532725) {}
[INFO ] 08:52:12,827 [Test worker] (PersistentNetworkMapCache.kt:195) network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 08:52:12,833 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639532725) {}
[INFO ] 08:52:12,834 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639532725) {}
[INFO ] 08:52:12,841 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:12,841 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639532725) {}
[INFO ] 08:52:12,841 [Test worker] (PersistentNetworkMapCache.kt:191) network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639532725) {}
[INFO ] 08:52:12,841 [Test worker] (PersistentNetworkMapCache.kt:210) network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 08:52:12,842 [Test worker] (PersistentNetworkMapCache.kt:215) network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1520639532725) {}
[WARN ] 08:52:12,889 [Mock network] (FlowLogic.kt:440) flow.[3910d504-ab88-446b-ab9a-9f5d2b05a52b].maybeWireUpProgressTracking - ProgressTracker has not been started {}
[INFO ] 08:52:12,921 [Mock network] (FlowStateMachineImpl.kt:419) flow.[3910d504-ab88-446b-ab9a-9f5d2b05a52b].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7263595939493736658). {}
[INFO ] 08:52:12,953 [Mock network] (StateMachineManagerImpl.kt:367) statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7263595939493736658). {invocation_id=8371dc95-a6dd-430a-8877-b4dbb8dd53ff, invocation_timestamp=2018-03-09T23:52:12.952Z, session_id=8371dc95-a6dd-430a-8877-b4dbb8dd53ff, session_timestamp=2018-03-09T23:52:12.952Z}
[WARN ] 08:52:13,026 [Mock network] (StateMachineManagerImpl.kt:79) flow.[3910d504-ab88-446b-ab9a-9f5d2b05a52b].uncaughtException - Caught exception from flow {}
java.lang.IllegalStateException: Cannot rewind a progress tracker once it has ended
	at net.corda.core.utilities.ProgressTracker.setCurrentStep(ProgressTracker.kt:116) ~[corda-core-corda-3.0-RC01.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:120) ~[corda-node-corda-3.0-RC01.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) ~[corda-node-corda-3.0-RC01.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_162]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_162]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_162]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_162]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_162]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_162]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-corda-3.0-RC01.jar:?]
[INFO ] 08:52:13,030 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-16 - Close initiated... {}
[INFO ] 08:52:13,038 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-16 - Closed. {}
[INFO ] 08:52:13,100 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-17 - Close initiated... {}
[INFO ] 08:52:13,101 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-17 - Closed. {}
[INFO ] 08:52:13,102 [Test worker] (HikariPool.java:204) pool.HikariPool.shutdown - HikariPool-18 - Close initiated... {}
[INFO ] 08:52:13,103 [Test worker] (HikariPool.java:241) pool.HikariPool.shutdown - HikariPool-18 - Closed. {}
]]></system-out>
  <system-err><![CDATA[QUASAR WARNING: Assertions enabled. This may harm performance.
QUASAR WARNING: Fibers are set to verify instrumentation. This may *severely* harm performance.
]]></system-err>
</testsuite>
